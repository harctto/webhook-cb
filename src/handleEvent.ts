import {
  recieveHello,
  responseHello,
  noAnswer,
  artifacts,
  characters,
  elementsConstant,
  weapons,
} from './utils/constant'
import {
  getArtifact,
  getArtifactDetail,
  getCharacter,
  getCharacterDetail,
} from './services/api'
import { randomWord, pushMsg, replyMsg } from './utils/helper'
import { ICharacterDetail, IEventLine } from './types/api'
import {
  artifactsDetails,
  charactersDetails,
  charactersPick,
  elements,
  weaponsType,
} from './utils/optionsCard'
import { ICharacter } from './types/constant'

const test = async () => {
  return
}

const handleEvent = async (event: IEventLine) => {
  if (event.message.text) {
    //greeting
    if (recieveHello.includes(event.message.text)) {
      replyMsg({
        event,
        message: randomWord(responseHello),
      })
    }
    //characters
    else if (event.message.text === 'characters') {
      await replyMsg({
        event,
        message: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏≤‡∏ï‡∏∏‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ üíÅüèª‚Äç‚ôÄÔ∏è‚ú®',
      })
      await pushMsg({
        type: 'flex',
        event,
        message: elements,
        altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏≤‡∏ï‡∏∏‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ üíÅüèª‚Äç‚ôÄÔ∏è‚ú®',
      })
    }

    //characters list
    else if (elementsConstant.includes(event.message.text)) {
      const payload = characters.filter(
        (el) => el.elements === event.message.text,
      )
      const flexMsg = charactersPick(payload)
      await replyMsg({
        event,
        message: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üòä',
      })
      await pushMsg({
        type: 'flex',
        event,
        message: flexMsg,
        altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üòä',
      })
    }

    //characters details
    else if (characters.some((item) => item.name === event.message.text)) {
      const getDetail = await getCharacterDetail(event.message.text)
      if (getDetail.data) {
        const flexMsg = await charactersDetails(
          getDetail.data,
          event.message.text,
        )
        await pushMsg({
          type: 'flex',
          event,
          message: flexMsg,
          altText: getDetail.data.name + ', ' + getDetail.data.affiliation,
        }).then(() => {
          // ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á
          setTimeout(() => {
            replyMsg({
              event,
              isMulti: true,
              multiMessage: [
                `üìå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÅ‡∏û‡∏ó‡∏ä‡πå 3.0 üìå`,
                `üëâüèªüëâüèª ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ${getDetail.data.name} ‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏â‡∏±‡∏ô‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞
‡∏ä‡∏∑‡πà‡∏≠: ${getDetail.data.name}
‡∏â‡∏≤‡∏¢‡∏≤: ${getDetail.data.title}
‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥: ${getDetail.data.nation}
‡πÉ‡∏ä‡πâ‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${getDetail.data.weapon}
                
${getDetail.data.description}`,
                `‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ
üëäüèª ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥: (‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡πà‡∏≤)
  (‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢)
                
‚ú® ‡∏™‡∏Å‡∏¥‡∏•‡∏ò‡∏≤‡∏ï‡∏∏: (‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡πà‡∏≤)
  (‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢)
                
üî• ‡∏ó‡πà‡∏≤‡πÑ‡∏°‡πâ‡∏ï‡∏≤‡∏¢: (‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡πà‡∏≤)
  (‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢)`,
              ],
            })
          },1000)
        })
      }
    }

    //weapons
    else if (event.message.text === 'weapons') {
      await replyMsg({
        event,
        message: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞',
      })
      await pushMsg({
        type: 'flex',
        event,
        message: weapons,
        altText: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞',
      })
    }
    //weapons list

    //artifacts
    else if (event.message.text === 'artifacts') {
      const { data } = await getArtifact()
      if (data) {
        replyMsg({
          event,
          message: data,
        })
      }
    }
    //artifacts list
    else if (artifacts.some((item) => item.id === event.message.text)) {
      const { name } = artifacts.find((item) => item.id === event.message.text)
      const { data } = await getArtifactDetail(name)
      const getDetail = artifactsDetails({ name: name, fullname: data.name })
      await pushMsg({
        type: 'flex',
        event,
        message: getDetail,
        altText: data.name,
      })
      //‡πÄ‡∏û‡∏¥‡πà‡∏° emoji - ‡πÑ‡∏°‡πà
      await replyMsg({
        event,
        message: `Artifact ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠ ${data.name}
‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤‡∏¢‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ${data.max_rarity} ‡∏î‡∏≤‡∏ß
---------------------------
${
  data['2-piece_bonus'] && data['4-piece_bonus']
    ? `‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡πÄ‡∏ã‡πá‡∏ï 2 ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏ú‡∏•‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ :
  ${data['2-piece_bonus']}
---------------------------
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡πÄ‡∏ã‡πá‡∏ï 4 ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏ú‡∏•‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ :
  ${data['4-piece_bonus']}`
    : `‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡πÄ‡∏ã‡πá‡∏ï 1 ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏ú‡∏•‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ :
  ${data['1-piece_bonus']}`
}
`,
      })
    }
    //no-text
    else {
      replyMsg({
        event,
        message: randomWord(noAnswer),
      })
    }
  }
}

export { handleEvent, test }
